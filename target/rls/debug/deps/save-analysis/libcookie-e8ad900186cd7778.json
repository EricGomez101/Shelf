{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.18.0","prelude":{"crate_id":{"name":"cookie","disambiguator":[12366583435839146710,2826669323818103291]},"crate_root":"/home/eric/.cargo/registry/src/github.com-1ecc6299db9ec823/cookie-0.11.0/src","external_crates":[{"file_name":"/home/eric/.cargo/registry/src/github.com-1ecc6299db9ec823/cookie-0.11.0/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[7046065364473614619,10056788711089334333]}},{"file_name":"/home/eric/.cargo/registry/src/github.com-1ecc6299db9ec823/cookie-0.11.0/src/lib.rs","num":2,"id":{"name":"core","disambiguator":[18045606665974499287,7370096489839769307]}},{"file_name":"/home/eric/.cargo/registry/src/github.com-1ecc6299db9ec823/cookie-0.11.0/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[8940449385909834963,3306656639318091857]}},{"file_name":"/home/eric/.cargo/registry/src/github.com-1ecc6299db9ec823/cookie-0.11.0/src/lib.rs","num":4,"id":{"name":"alloc","disambiguator":[4650751871500514687,4336247883493526277]}},{"file_name":"/home/eric/.cargo/registry/src/github.com-1ecc6299db9ec823/cookie-0.11.0/src/lib.rs","num":5,"id":{"name":"alloc_system","disambiguator":[2671025247590627007,221811983110420441]}},{"file_name":"/home/eric/.cargo/registry/src/github.com-1ecc6299db9ec823/cookie-0.11.0/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[8453567920792120947,9168909440481815743]}},{"file_name":"/home/eric/.cargo/registry/src/github.com-1ecc6299db9ec823/cookie-0.11.0/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[18179531398593787271,9907519451984815572]}},{"file_name":"/home/eric/.cargo/registry/src/github.com-1ecc6299db9ec823/cookie-0.11.0/src/lib.rs","num":8,"id":{"name":"alloc_jemalloc","disambiguator":[14986725973947038648,14534646976018034053]}},{"file_name":"/home/eric/.cargo/registry/src/github.com-1ecc6299db9ec823/cookie-0.11.0/src/lib.rs","num":9,"id":{"name":"panic_unwind","disambiguator":[724428356685261056,12774823514128739995]}},{"file_name":"/home/eric/.cargo/registry/src/github.com-1ecc6299db9ec823/cookie-0.11.0/src/lib.rs","num":10,"id":{"name":"url","disambiguator":[18298993023048552994,2025504784438168678]}},{"file_name":"/home/eric/.cargo/registry/src/github.com-1ecc6299db9ec823/cookie-0.11.0/src/lib.rs","num":11,"id":{"name":"matches","disambiguator":[16109059185521171633,1880694005762132641]}},{"file_name":"/home/eric/.cargo/registry/src/github.com-1ecc6299db9ec823/cookie-0.11.0/src/lib.rs","num":12,"id":{"name":"idna","disambiguator":[1452174574988229952,8985365696506598776]}},{"file_name":"/home/eric/.cargo/registry/src/github.com-1ecc6299db9ec823/cookie-0.11.0/src/lib.rs","num":13,"id":{"name":"unicode_bidi","disambiguator":[12178828187305809285,14438243977239117134]}},{"file_name":"/home/eric/.cargo/registry/src/github.com-1ecc6299db9ec823/cookie-0.11.0/src/lib.rs","num":14,"id":{"name":"unicode_normalization","disambiguator":[1640848769962183783,18218028657449363697]}},{"file_name":"/home/eric/.cargo/registry/src/github.com-1ecc6299db9ec823/cookie-0.11.0/src/lib.rs","num":15,"id":{"name":"percent_encoding","disambiguator":[9530920068796329056,17467867941019113161]}},{"file_name":"/home/eric/.cargo/registry/src/github.com-1ecc6299db9ec823/cookie-0.11.0/src/lib.rs","num":16,"id":{"name":"encoding","disambiguator":[11004503546465066561,8766130829626511703]}},{"file_name":"/home/eric/.cargo/registry/src/github.com-1ecc6299db9ec823/cookie-0.11.0/src/lib.rs","num":17,"id":{"name":"encoding_index_singlebyte","disambiguator":[16189711133457230406,13775161943889539121]}},{"file_name":"/home/eric/.cargo/registry/src/github.com-1ecc6299db9ec823/cookie-0.11.0/src/lib.rs","num":18,"id":{"name":"encoding_index_korean","disambiguator":[5444294898274326639,3242884546643418231]}},{"file_name":"/home/eric/.cargo/registry/src/github.com-1ecc6299db9ec823/cookie-0.11.0/src/lib.rs","num":19,"id":{"name":"encoding_index_japanese","disambiguator":[10734146673184069447,12703757779630796135]}},{"file_name":"/home/eric/.cargo/registry/src/github.com-1ecc6299db9ec823/cookie-0.11.0/src/lib.rs","num":20,"id":{"name":"encoding_index_simpchinese","disambiguator":[15653602118299167677,15256873770087352377]}},{"file_name":"/home/eric/.cargo/registry/src/github.com-1ecc6299db9ec823/cookie-0.11.0/src/lib.rs","num":21,"id":{"name":"encoding_index_tradchinese","disambiguator":[15969994831534240077,7577778140475542203]}},{"file_name":"/home/eric/.cargo/registry/src/github.com-1ecc6299db9ec823/cookie-0.11.0/src/lib.rs","num":22,"id":{"name":"time","disambiguator":[16109181841745819613,10661338631273226868]}},{"file_name":"/home/eric/.cargo/registry/src/github.com-1ecc6299db9ec823/cookie-0.11.0/src/lib.rs","num":23,"id":{"name":"libc","disambiguator":[16959940114727513389,4435599347966142126]}},{"file_name":"/home/eric/.cargo/registry/src/github.com-1ecc6299db9ec823/cookie-0.11.0/src/secure/mod.rs","num":24,"id":{"name":"ring","disambiguator":[16279715838091008867,4325542277345561036]}},{"file_name":"/home/eric/.cargo/registry/src/github.com-1ecc6299db9ec823/cookie-0.11.0/src/secure/mod.rs","num":25,"id":{"name":"lazy_static","disambiguator":[17326296804847731044,18381035407715517402]}},{"file_name":"/home/eric/.cargo/registry/src/github.com-1ecc6299db9ec823/cookie-0.11.0/src/secure/mod.rs","num":26,"id":{"name":"untrusted","disambiguator":[3808815271782794221,8499558606908037430]}},{"file_name":"/home/eric/.cargo/registry/src/github.com-1ecc6299db9ec823/cookie-0.11.0/src/secure/mod.rs","num":27,"id":{"name":"base64","disambiguator":[13051244939450290410,7113602835738284035]}},{"file_name":"/home/eric/.cargo/registry/src/github.com-1ecc6299db9ec823/cookie-0.11.0/src/secure/mod.rs","num":28,"id":{"name":"byteorder","disambiguator":[4390361276855900838,5777695070144406391]}},{"file_name":"/home/eric/.cargo/registry/src/github.com-1ecc6299db9ec823/cookie-0.11.0/src/secure/mod.rs","num":29,"id":{"name":"safemem","disambiguator":[12700859807323256597,7905446391065630028]}}],"span":{"file_name":[47,104,111,109,101,47,101,114,105,99,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,111,111,107,105,101,45,48,46,49,49,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":0,"byte_end":33285,"line_start":1,"line_end":1105,"column_start":1,"column_end":2}},"imports":[{"kind":"GlobUse","ref_id":null,"span":{"file_name":[47,104,111,109,101,47,101,114,105,99,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,111,111,107,105,101,45,48,46,49,49,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":2475,"byte_end":2476,"line_start":74,"line_end":74,"column_start":44,"column_end":45},"alias_span":null,"name":"*","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":544},"span":{"file_name":[47,104,111,109,101,47,101,114,105,99,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,111,111,107,105,101,45,48,46,49,49,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":2771,"byte_end":2781,"line_start":88,"line_end":88,"column_start":16,"column_end":26},"alias_span":null,"name":"ParseError","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":534},"span":{"file_name":[47,104,111,109,101,47,101,114,105,99,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,111,111,107,105,101,45,48,46,49,49,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":2800,"byte_end":2813,"line_start":89,"line_end":89,"column_start":18,"column_end":31},"alias_span":null,"name":"CookieBuilder","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":566},"span":{"file_name":[47,104,111,109,101,47,101,114,105,99,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,111,111,107,105,101,45,48,46,49,49,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":2829,"byte_end":2838,"line_start":90,"line_end":90,"column_start":15,"column_end":24},"alias_span":null,"name":"CookieJar","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":154},"span":{"file_name":[47,104,111,109,101,47,101,114,105,99,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,111,111,107,105,101,45,48,46,49,49,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":2840,"byte_end":2845,"line_start":90,"line_end":90,"column_start":26,"column_end":31},"alias_span":null,"name":"Delta","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":166},"span":{"file_name":[47,104,111,109,101,47,101,114,105,99,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,111,111,107,105,101,45,48,46,49,49,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":2847,"byte_end":2851,"line_start":90,"line_end":90,"column_start":33,"column_end":37},"alias_span":null,"name":"Iter","value":"","parent":{"krate":0,"index":0}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":[47,104,111,109,101,47,101,114,105,99,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,111,111,107,105,101,45,48,46,49,49,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":2869,"byte_end":2870,"line_start":91,"line_end":91,"column_start":16,"column_end":17},"alias_span":null,"name":"*","value":"SameSite","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":[47,104,111,109,101,47,101,114,105,99,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,111,111,107,105,101,45,48,46,49,49,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":0,"byte_end":33285,"line_start":1,"line_end":1105,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/home/eric/.cargo/registry/src/github.com-1ecc6299db9ec823/cookie-0.11.0/src/lib.rs","parent":null,"children":[{"krate":0,"index":2},{"krate":0,"index":4},{"krate":0,"index":6},{"krate":0,"index":8},{"krate":0,"index":10},{"krate":0,"index":48},{"krate":0,"index":104},{"krate":0,"index":174},{"krate":0,"index":222},{"krate":0,"index":238},{"krate":0,"index":402},{"krate":0,"index":404},{"krate":0,"index":406},{"krate":0,"index":408},{"krate":0,"index":410},{"krate":0,"index":412},{"krate":0,"index":418},{"krate":0,"index":424},{"krate":0,"index":426},{"krate":0,"index":428},{"krate":0,"index":430},{"krate":0,"index":438},{"krate":0,"index":620},{"krate":0,"index":626},{"krate":0,"index":622},{"krate":0,"index":440},{"krate":0,"index":630},{"krate":0,"index":636},{"krate":0,"index":632},{"krate":0,"index":446},{"krate":0,"index":454},{"krate":0,"index":514},{"krate":0,"index":516},{"krate":0,"index":520},{"krate":0,"index":524},{"krate":0,"index":530}],"decl_id":null,"docs":" HTTP cookie parsing and cookie jar management.","sig":null,"attributes":[{"value":"deny(missing_docs)","span":{"file_name":[47,104,111,109,101,47,101,114,105,99,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,111,111,107,105,101,45,48,46,49,49,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":2227,"byte_end":2249,"line_start":62,"line_end":62,"column_start":1,"column_end":23}}]},{"kind":"Struct","id":{"krate":0,"index":534},"span":{"file_name":[47,104,111,109,101,47,101,114,105,99,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,111,111,107,105,101,45,48,46,49,49,46,48,47,115,114,99,47,98,117,105,108,100,101,114,46,114,115],"byte_start":34122,"byte_end":34135,"line_start":35,"line_end":35,"column_start":12,"column_end":25},"name":"CookieBuilder","qualname":"::builder::CookieBuilder","value":"CookieBuilder {  }","parent":null,"children":[{"krate":0,"index":163}],"decl_id":null,"docs":" Structure that follows the builder pattern for building `Cookie` structs.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":28},"span":{"file_name":[47,104,111,109,101,47,101,114,105,99,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,111,111,107,105,101,45,48,46,49,49,46,48,47,115,114,99,47,98,117,105,108,100,101,114,46,114,115],"byte_start":34637,"byte_end":34640,"line_start":54,"line_end":54,"column_start":12,"column_end":15},"name":"new","qualname":"<CookieBuilder>::new","value":"fn <N, V> (name: N, value: V) -> CookieBuilder","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `CookieBuilder` instance from the given name and value.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":30},"span":{"file_name":[47,104,111,109,101,47,101,114,105,99,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,111,111,107,105,101,45,48,46,49,49,46,48,47,115,114,99,47,98,117,105,108,100,101,114,46,114,115],"byte_start":35270,"byte_end":35277,"line_start":80,"line_end":80,"column_start":12,"column_end":19},"name":"expires","qualname":"<CookieBuilder>::expires","value":"fn (mut self, when: Tm) -> CookieBuilder","parent":null,"children":[],"decl_id":null,"docs":" Sets the `expires` field in the cookie being built.","sig":null,"attributes":[{"value":"inline","span":{"file_name":[47,104,111,109,101,47,101,114,105,99,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,111,111,107,105,101,45,48,46,49,49,46,48,47,115,114,99,47,98,117,105,108,100,101,114,46,114,115],"byte_start":35249,"byte_end":35258,"line_start":79,"line_end":79,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":32},"span":{"file_name":[47,104,111,109,101,47,101,114,105,99,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,111,111,107,105,101,45,48,46,49,49,46,48,47,115,114,99,47,98,117,105,108,100,101,114,46,114,115],"byte_start":35873,"byte_end":35880,"line_start":105,"line_end":105,"column_start":12,"column_end":19},"name":"max_age","qualname":"<CookieBuilder>::max_age","value":"fn (mut self, value: Duration) -> CookieBuilder","parent":null,"children":[],"decl_id":null,"docs":" Sets the `max_age` field in the cookie being built.","sig":null,"attributes":[{"value":"inline","span":{"file_name":[47,104,111,109,101,47,101,114,105,99,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,111,111,107,105,101,45,48,46,49,49,46,48,47,115,114,99,47,98,117,105,108,100,101,114,46,114,115],"byte_start":35852,"byte_end":35861,"line_start":104,"line_end":104,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":34},"span":{"file_name":[47,104,111,109,101,47,101,114,105,99,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,111,111,107,105,101,45,48,46,49,49,46,48,47,115,114,99,47,98,117,105,108,100,101,114,46,114,115],"byte_start":36330,"byte_end":36336,"line_start":123,"line_end":123,"column_start":12,"column_end":18},"name":"domain","qualname":"<CookieBuilder>::domain","value":"fn <D> (mut self, value: D) -> CookieBuilder","parent":null,"children":[],"decl_id":null,"docs":" Sets the `domain` field in the cookie being built.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":36},"span":{"file_name":[47,104,111,109,101,47,101,114,105,99,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,111,111,107,105,101,45,48,46,49,49,46,48,47,115,114,99,47,98,117,105,108,100,101,114,46,114,115],"byte_start":36768,"byte_end":36772,"line_start":141,"line_end":141,"column_start":12,"column_end":16},"name":"path","qualname":"<CookieBuilder>::path","value":"fn <P> (mut self, path: P) -> CookieBuilder","parent":null,"children":[],"decl_id":null,"docs":" Sets the `path` field in the cookie being built.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":38},"span":{"file_name":[47,104,111,109,101,47,101,114,105,99,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,111,111,107,105,101,45,48,46,49,49,46,48,47,115,114,99,47,98,117,105,108,100,101,114,46,114,115],"byte_start":37222,"byte_end":37228,"line_start":160,"line_end":160,"column_start":12,"column_end":18},"name":"secure","qualname":"<CookieBuilder>::secure","value":"fn (mut self, value: bool) -> CookieBuilder","parent":null,"children":[],"decl_id":null,"docs":" Sets the `secure` field in the cookie being built.","sig":null,"attributes":[{"value":"inline","span":{"file_name":[47,104,111,109,101,47,101,114,105,99,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,111,111,107,105,101,45,48,46,49,49,46,48,47,115,114,99,47,98,117,105,108,100,101,114,46,114,115],"byte_start":37201,"byte_end":37210,"line_start":159,"line_end":159,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":40},"span":{"file_name":[47,104,111,109,101,47,101,114,105,99,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,111,111,107,105,101,45,48,46,49,49,46,48,47,115,114,99,47,98,117,105,108,100,101,114,46,114,115],"byte_start":37666,"byte_end":37675,"line_start":179,"line_end":179,"column_start":12,"column_end":21},"name":"http_only","qualname":"<CookieBuilder>::http_only","value":"fn (mut self, value: bool) -> CookieBuilder","parent":null,"children":[],"decl_id":null,"docs":" Sets the `http_only` field in the cookie being built.","sig":null,"attributes":[{"value":"inline","span":{"file_name":[47,104,111,109,101,47,101,114,105,99,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,111,111,107,105,101,45,48,46,49,49,46,48,47,115,114,99,47,98,117,105,108,100,101,114,46,114,115],"byte_start":37645,"byte_end":37654,"line_start":178,"line_end":178,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":42},"span":{"file_name":[47,104,111,109,101,47,101,114,105,99,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,111,111,107,105,101,45,48,46,49,49,46,48,47,115,114,99,47,98,117,105,108,100,101,114,46,114,115],"byte_start":38152,"byte_end":38161,"line_start":198,"line_end":198,"column_start":12,"column_end":21},"name":"same_site","qualname":"<CookieBuilder>::same_site","value":"fn (mut self, value: SameSite) -> CookieBuilder","parent":null,"children":[],"decl_id":null,"docs":" Sets the `same_site` field in the cookie being built.","sig":null,"attributes":[{"value":"inline","span":{"file_name":[47,104,111,109,101,47,101,114,105,99,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,111,111,107,105,101,45,48,46,49,49,46,48,47,115,114,99,47,98,117,105,108,100,101,114,46,114,115],"byte_start":38131,"byte_end":38140,"line_start":197,"line_end":197,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":44},"span":{"file_name":[47,104,111,109,101,47,101,114,105,99,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,111,111,107,105,101,45,48,46,49,49,46,48,47,115,114,99,47,98,117,105,108,100,101,114,46,114,115],"byte_start":38851,"byte_end":38860,"line_start":225,"line_end":225,"column_start":12,"column_end":21},"name":"permanent","qualname":"<CookieBuilder>::permanent","value":"fn (mut self) -> CookieBuilder","parent":null,"children":[],"decl_id":null,"docs":" Makes the cookie being built 'permanent' by extending its expiration and\n max age 20 years into the future.","sig":null,"attributes":[{"value":"inline","span":{"file_name":[47,104,111,109,101,47,101,114,105,99,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,111,111,107,105,101,45,48,46,49,49,46,48,47,115,114,99,47,98,117,105,108,100,101,114,46,114,115],"byte_start":38830,"byte_end":38839,"line_start":224,"line_end":224,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":46},"span":{"file_name":[47,104,111,109,101,47,101,114,105,99,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,111,111,107,105,101,45,48,46,49,49,46,48,47,115,114,99,47,98,117,105,108,100,101,114,46,114,115],"byte_start":39404,"byte_end":39410,"line_start":247,"line_end":247,"column_start":12,"column_end":18},"name":"finish","qualname":"<CookieBuilder>::finish","value":"fn (self) -> Cookie<'static>","parent":null,"children":[],"decl_id":null,"docs":" Finishes building and returns the built `Cookie`.","sig":null,"attributes":[{"value":"inline","span":{"file_name":[47,104,111,109,101,47,101,114,105,99,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,111,111,107,105,101,45,48,46,49,49,46,48,47,115,114,99,47,98,117,105,108,100,101,114,46,114,115],"byte_start":39383,"byte_end":39392,"line_start":246,"line_end":246,"column_start":5,"column_end":14}}]},{"kind":"TupleVariant","id":{"krate":0,"index":165},"span":{"file_name":[47,104,111,109,101,47,101,114,105,99,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,111,111,107,105,101,45,48,46,49,49,46,48,47,115,114,99,47,112,97,114,115,101,46,114,115],"byte_start":39967,"byte_end":39978,"line_start":21,"line_end":21,"column_start":5,"column_end":16},"name":"MissingPair","qualname":"::parse::ParseError::MissingPair","value":"ParseError::MissingPair","parent":{"krate":0,"index":544},"children":[],"decl_id":null,"docs":" The cookie did not contain a name/value pair.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":167},"span":{"file_name":[47,104,111,109,101,47,101,114,105,99,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,111,111,107,105,101,45,48,46,49,49,46,48,47,115,114,99,47,112,97,114,115,101,46,114,115],"byte_start":40021,"byte_end":40030,"line_start":23,"line_end":23,"column_start":5,"column_end":14},"name":"EmptyName","qualname":"::parse::ParseError::EmptyName","value":"ParseError::EmptyName","parent":{"krate":0,"index":544},"children":[],"decl_id":null,"docs":" The cookie's name was empty.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":169},"span":{"file_name":[47,104,111,109,101,47,101,114,105,99,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,111,111,107,105,101,45,48,46,49,49,46,48,47,115,114,99,47,112,97,114,115,101,46,114,115],"byte_start":40107,"byte_end":40116,"line_start":25,"line_end":25,"column_start":5,"column_end":14},"name":"Utf8Error","qualname":"::parse::ParseError::Utf8Error","value":"ParseError::Utf8Error(Utf8Error)","parent":{"krate":0,"index":544},"children":[],"decl_id":null,"docs":" Decoding the cookie's name or value resulted in invalid UTF-8.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":173},"span":{"file_name":[47,104,111,109,101,47,101,114,105,99,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,111,111,107,105,101,45,48,46,49,49,46,48,47,115,114,99,47,112,97,114,115,101,46,114,115],"byte_start":40297,"byte_end":40312,"line_start":29,"line_end":29,"column_start":5,"column_end":20},"name":"__Nonexhasutive","qualname":"::parse::ParseError::__Nonexhasutive","value":"ParseError::__Nonexhasutive","parent":{"krate":0,"index":544},"children":[],"decl_id":null,"docs":" It is discouraged to exhaustively match on this enum as its variants may\n grow without a breaking-change bump in version numbers.\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":544},"span":{"file_name":[47,104,111,109,101,47,101,114,105,99,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,111,111,107,105,101,45,48,46,49,49,46,48,47,115,114,99,47,112,97,114,115,101,46,114,115],"byte_start":39896,"byte_end":39906,"line_start":19,"line_end":19,"column_start":10,"column_end":20},"name":"ParseError","qualname":"::parse::ParseError","value":"ParseError::{MissingPair, EmptyName, Utf8Error, __Nonexhasutive}","parent":null,"children":[{"krate":0,"index":165},{"krate":0,"index":167},{"krate":0,"index":169},{"krate":0,"index":173}],"decl_id":null,"docs":" Enum corresponding to a parsing error.\n","sig":null,"attributes":[{"value":"structural_match","span":{"file_name":[47,104,111,109,101,47,101,114,105,99,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,111,111,107,105,101,45,48,46,49,49,46,48,47,115,114,99,47,112,97,114,115,101,46,114,115],"byte_start":39887,"byte_end":40315,"line_start":19,"line_end":30,"column_start":1,"column_end":2}},{"value":"rustc_copy_clone_marker","span":{"file_name":[47,104,111,109,101,47,101,114,105,99,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,111,111,107,105,101,45,48,46,49,49,46,48,47,115,114,99,47,112,97,114,115,101,46,114,115],"byte_start":39887,"byte_end":40315,"line_start":19,"line_end":30,"column_start":1,"column_end":2}}]},{"kind":"Method","id":{"krate":0,"index":82},"span":{"file_name":[47,104,111,109,101,47,101,114,105,99,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,111,111,107,105,101,45,48,46,49,49,46,48,47,115,114,99,47,112,97,114,115,101,46,114,115],"byte_start":40402,"byte_end":40408,"line_start":34,"line_end":34,"column_start":12,"column_end":18},"name":"as_str","qualname":"<ParseError>::as_str","value":"fn (&self) -> &'static str","parent":null,"children":[],"decl_id":null,"docs":" Returns a description of this error as a string\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":566},"span":{"file_name":[47,104,111,109,101,47,101,114,105,99,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,111,111,107,105,101,45,48,46,49,49,46,48,47,115,114,99,47,106,97,114,46,114,115],"byte_start":58363,"byte_end":58372,"line_start":83,"line_end":83,"column_start":12,"column_end":21},"name":"CookieJar","qualname":"::jar::CookieJar","value":"CookieJar {  }","parent":null,"children":[{"krate":0,"index":175},{"krate":0,"index":177}],"decl_id":null,"docs":" A collection of cookies that tracks its modifications.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":130},"span":{"file_name":[47,104,111,109,101,47,101,114,105,99,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,111,111,107,105,101,45,48,46,49,49,46,48,47,115,114,99,47,106,97,114,46,114,115],"byte_start":58708,"byte_end":58711,"line_start":99,"line_end":99,"column_start":12,"column_end":15},"name":"new","qualname":"<CookieJar>::new","value":"fn () -> CookieJar","parent":null,"children":[],"decl_id":null,"docs":" Creates an empty cookie jar.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":132},"span":{"file_name":[47,104,111,109,101,47,101,114,105,99,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,111,111,107,105,101,45,48,46,49,49,46,48,47,115,114,99,47,106,97,114,46,114,115],"byte_start":59229,"byte_end":59232,"line_start":117,"line_end":117,"column_start":12,"column_end":15},"name":"get","qualname":"<CookieJar>::get","value":"fn (&self, name: &str) -> Option<&Cookie<'static>>","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the `Cookie` inside this jar with the name\n `name`. If no such cookie exists, returns `None`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":134},"span":{"file_name":[47,104,111,109,101,47,101,114,105,99,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,111,111,107,105,101,45,48,46,49,49,46,48,47,115,114,99,47,106,97,114,46,114,115],"byte_start":60552,"byte_end":60564,"line_start":149,"line_end":149,"column_start":12,"column_end":24},"name":"add_original","qualname":"<CookieJar>::add_original","value":"fn (&mut self, cookie: Cookie<'static>) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Adds an \"original\" `cookie` to this jar. If an original cookie with the\n same name already exists, it is replaced with `cookie`. Cookies added\n with `add` take precedence and are not replaced by this method.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":136},"span":{"file_name":[47,104,111,109,101,47,101,114,105,99,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,111,111,107,105,101,45,48,46,49,49,46,48,47,115,114,99,47,106,97,114,46,114,115],"byte_start":61290,"byte_end":61293,"line_start":170,"line_end":170,"column_start":12,"column_end":15},"name":"add","qualname":"<CookieJar>::add","value":"fn (&mut self, cookie: Cookie<'static>) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Adds `cookie` to this jar. If a cookie with the same name already\n exists, it is replaced with `cookie`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":138},"span":{"file_name":[47,104,111,109,101,47,101,114,105,99,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,111,111,107,105,101,45,48,46,49,49,46,48,47,115,114,99,47,106,97,114,46,114,115],"byte_start":63263,"byte_end":63269,"line_start":224,"line_end":224,"column_start":12,"column_end":18},"name":"remove","qualname":"<CookieJar>::remove","value":"fn (&mut self, mut cookie: Cookie<'static>) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Removes `cookie` from this jar. If an _original_ cookie with the same\n name as `cookie` is present in the jar, a _removal_ cookie will be\n present in the `delta` computation. To properly generate the removal\n cookie, `cookie` must contain the same `path` and `domain` as the cookie\n that was initially set.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":140},"span":{"file_name":[47,104,111,109,101,47,101,114,105,99,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,111,111,107,105,101,45,48,46,49,49,46,48,47,115,114,99,47,106,97,114,46,114,115],"byte_start":64958,"byte_end":64970,"line_start":271,"line_end":271,"column_start":12,"column_end":24},"name":"force_remove","qualname":"<CookieJar>::force_remove","value":"fn <'a> (&mut self, cookie: Cookie<'a>) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Removes `cookie` from this jar completely. This method differs from\n `remove` in that no delta cookie is created under any condition. Neither\n the `delta` nor `iter` methods will return a cookie that is removed\n using this method.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":142},"span":{"file_name":[47,104,111,109,101,47,101,114,105,99,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,111,111,107,105,101,45,48,46,49,49,46,48,47,115,114,99,47,106,97,114,46,114,115],"byte_start":65375,"byte_end":65380,"line_start":280,"line_end":280,"column_start":12,"column_end":17},"name":"clear","qualname":"<CookieJar>::clear","value":"fn (&mut self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Removes all cookies from this cookie jar.\n","sig":null,"attributes":[{"value":"deprecated(since = \"0.7.0\",\n             note =\n                 \"calling this method may not remove all cookies since the path and domain are not specified; use `remove` instead\")","span":{"file_name":[47,104,111,109,101,47,101,114,105,99,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,111,111,107,105,101,45,48,46,49,49,46,48,47,115,114,99,47,106,97,114,46,114,115],"byte_start":65172,"byte_end":65363,"line_start":277,"line_end":279,"column_start":5,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":144},"span":{"file_name":[47,104,111,109,101,47,101,114,105,99,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,111,111,107,105,101,45,48,46,49,49,46,48,47,115,114,99,47,106,97,114,46,114,115],"byte_start":66506,"byte_end":66511,"line_start":312,"line_end":312,"column_start":12,"column_end":17},"name":"delta","qualname":"<CookieJar>::delta","value":"fn (&self) -> Delta","parent":null,"children":[],"decl_id":null,"docs":" Returns an iterator over cookies that represent the changes to this jar\n over time. These cookies can be rendered directly as `Set-Cookie` header\n values to affect the changes made to this jar on the client.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":146},"span":{"file_name":[47,104,111,109,101,47,101,114,105,99,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,111,111,107,105,101,45,48,46,49,49,46,48,47,115,114,99,47,106,97,114,46,114,115],"byte_start":67675,"byte_end":67679,"line_start":346,"line_end":346,"column_start":12,"column_end":16},"name":"iter","qualname":"<CookieJar>::iter","value":"fn (&self) -> Iter","parent":null,"children":[],"decl_id":null,"docs":" Returns an iterator over all of the cookies present in this jar.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":148},"span":{"file_name":[47,104,111,109,101,47,101,114,105,99,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,111,111,107,105,101,45,48,46,49,49,46,48,47,115,114,99,47,106,97,114,46,114,115],"byte_start":69205,"byte_end":69212,"line_start":384,"line_end":384,"column_start":12,"column_end":19},"name":"private","qualname":"<CookieJar>::private","value":"fn (&mut self, key: &Key) -> PrivateJar","parent":null,"children":[],"decl_id":null,"docs":" Returns a `PrivateJar` with `self` as its parent jar using the key `key`\n to sign/encrypt and verify/decrypt cookies added/retrieved from the\n child jar.","sig":null,"attributes":[{"value":"cfg(feature = \"secure\")","span":{"file_name":[47,104,111,109,101,47,101,114,105,99,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,111,111,107,105,101,45,48,46,49,49,46,48,47,115,114,99,47,106,97,114,46,114,115],"byte_start":69167,"byte_end":69193,"line_start":383,"line_end":383,"column_start":5,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":150},"span":{"file_name":[47,104,111,109,101,47,101,114,105,99,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,111,111,107,105,101,45,48,46,49,49,46,48,47,115,114,99,47,106,97,114,46,114,115],"byte_start":70728,"byte_end":70734,"line_start":422,"line_end":422,"column_start":12,"column_end":18},"name":"signed","qualname":"<CookieJar>::signed","value":"fn (&mut self, key: &Key) -> SignedJar","parent":null,"children":[],"decl_id":null,"docs":" Returns a `SignedJar` with `self` as its parent jar using the key `key`\n to sign/verify cookies added/retrieved from the child jar.","sig":null,"attributes":[{"value":"cfg(feature = \"secure\")","span":{"file_name":[47,104,111,109,101,47,101,114,105,99,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,111,111,107,105,101,45,48,46,49,49,46,48,47,115,114,99,47,106,97,114,46,114,115],"byte_start":70690,"byte_end":70716,"line_start":421,"line_end":421,"column_start":5,"column_end":31}}]},{"kind":"Struct","id":{"krate":0,"index":154},"span":{"file_name":[47,104,111,109,101,47,101,114,105,99,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,111,111,107,105,101,45,48,46,49,49,46,48,47,115,114,99,47,106,97,114,46,114,115],"byte_start":70927,"byte_end":70932,"line_start":430,"line_end":430,"column_start":12,"column_end":17},"name":"Delta","qualname":"::jar::Delta","value":"Delta {  }","parent":null,"children":[{"krate":0,"index":47}],"decl_id":null,"docs":" Iterator over the changes to a cookie jar.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":166},"span":{"file_name":[47,104,111,109,101,47,101,114,105,99,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,111,111,107,105,101,45,48,46,49,49,46,48,47,115,114,99,47,106,97,114,46,114,115],"byte_start":71306,"byte_end":71310,"line_start":446,"line_end":446,"column_start":12,"column_end":16},"name":"Iter","qualname":"::jar::Iter","value":"Iter {  }","parent":null,"children":[{"krate":0,"index":55}],"decl_id":null,"docs":" Iterator over all of the cookies in a jar.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":183},"span":{"file_name":[47,104,111,109,101,47,101,114,105,99,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,111,111,107,105,101,45,48,46,49,49,46,48,47,115,114,99,47,100,114,97,102,116,46,114,115],"byte_start":80156,"byte_end":80162,"line_start":21,"line_end":21,"column_start":5,"column_end":11},"name":"Strict","qualname":"::draft::SameSite::Strict","value":"SameSite::Strict","parent":{"krate":0,"index":590},"children":[],"decl_id":null,"docs":" The \"Strict\" `SameSite` attribute.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":185},"span":{"file_name":[47,104,111,109,101,47,101,114,105,99,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,111,111,107,105,101,45,48,46,49,49,46,48,47,115,114,99,47,100,114,97,102,116,46,114,115],"byte_start":80208,"byte_end":80211,"line_start":23,"line_end":23,"column_start":5,"column_end":8},"name":"Lax","qualname":"::draft::SameSite::Lax","value":"SameSite::Lax","parent":{"krate":0,"index":590},"children":[],"decl_id":null,"docs":" The \"Lax\" `SameSite` attribute.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":187},"span":{"file_name":[47,104,111,109,101,47,101,114,105,99,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,111,111,107,105,101,45,48,46,49,49,46,48,47,115,114,99,47,100,114,97,102,116,46,114,115],"byte_start":80250,"byte_end":80254,"line_start":25,"line_end":25,"column_start":5,"column_end":9},"name":"None","qualname":"::draft::SameSite::None","value":"SameSite::None","parent":{"krate":0,"index":590},"children":[],"decl_id":null,"docs":" No `SameSite` attribute.\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":590},"span":{"file_name":[47,104,111,109,101,47,101,114,105,99,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,111,111,107,105,101,45,48,46,49,49,46,48,47,115,114,99,47,100,114,97,102,116,46,114,115],"byte_start":80098,"byte_end":80106,"line_start":19,"line_end":19,"column_start":10,"column_end":18},"name":"SameSite","qualname":"::draft::SameSite","value":"SameSite::{Strict, Lax, None}","parent":null,"children":[{"krate":0,"index":183},{"krate":0,"index":185},{"krate":0,"index":187}],"decl_id":null,"docs":" The `SameSite` cookie attribute.","sig":null,"attributes":[{"value":"structural_match","span":{"file_name":[47,104,111,109,101,47,101,114,105,99,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,111,111,107,105,101,45,48,46,49,49,46,48,47,115,114,99,47,100,114,97,102,116,46,114,115],"byte_start":80089,"byte_end":80256,"line_start":19,"line_end":26,"column_start":1,"column_end":2}},{"value":"rustc_copy_clone_marker","span":{"file_name":[47,104,111,109,101,47,101,114,105,99,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,111,111,107,105,101,45,48,46,49,49,46,48,47,115,114,99,47,100,114,97,102,116,46,114,115],"byte_start":80089,"byte_end":80256,"line_start":19,"line_end":26,"column_start":1,"column_end":2}}]},{"kind":"Method","id":{"krate":0,"index":228},"span":{"file_name":[47,104,111,109,101,47,101,114,105,99,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,111,111,107,105,101,45,48,46,49,49,46,48,47,115,114,99,47,100,114,97,102,116,46,114,115],"byte_start":80624,"byte_end":80633,"line_start":42,"line_end":42,"column_start":12,"column_end":21},"name":"is_strict","qualname":"<SameSite>::is_strict","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if `self` is `SameSite::Strict` and `false` otherwise.","sig":null,"attributes":[{"value":"inline","span":{"file_name":[47,104,111,109,101,47,101,114,105,99,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,111,111,107,105,101,45,48,46,49,49,46,48,47,115,114,99,47,100,114,97,102,116,46,114,115],"byte_start":80603,"byte_end":80612,"line_start":41,"line_end":41,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":230},"span":{"file_name":[47,104,111,109,101,47,101,114,105,99,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,111,111,107,105,101,45,48,46,49,49,46,48,47,115,114,99,47,100,114,97,102,116,46,114,115],"byte_start":81113,"byte_end":81119,"line_start":62,"line_end":62,"column_start":12,"column_end":18},"name":"is_lax","qualname":"<SameSite>::is_lax","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if `self` is `SameSite::Lax` and `false` otherwise.","sig":null,"attributes":[{"value":"inline","span":{"file_name":[47,104,111,109,101,47,101,114,105,99,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,111,111,107,105,101,45,48,46,49,49,46,48,47,115,114,99,47,100,114,97,102,116,46,114,115],"byte_start":81092,"byte_end":81101,"line_start":61,"line_end":61,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":232},"span":{"file_name":[47,104,111,109,101,47,101,114,105,99,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,111,111,107,105,101,45,48,46,49,49,46,48,47,115,114,99,47,100,114,97,102,116,46,114,115],"byte_start":81605,"byte_end":81612,"line_start":82,"line_end":82,"column_start":12,"column_end":19},"name":"is_none","qualname":"<SameSite>::is_none","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if `self` is `SameSite::None` and `false` otherwise.","sig":null,"attributes":[{"value":"inline","span":{"file_name":[47,104,111,109,101,47,101,114,105,99,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,111,111,107,105,101,45,48,46,49,49,46,48,47,115,114,99,47,100,114,97,102,116,46,114,115],"byte_start":81584,"byte_end":81593,"line_start":81,"line_end":81,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":288},"span":{"file_name":[47,104,111,109,101,47,101,114,105,99,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,111,111,107,105,101,45,48,46,49,49,46,48,47,115,114,99,47,115,101,99,117,114,101,47,112,114,105,118,97,116,101,46,114,115],"byte_start":84582,"byte_end":84592,"line_start":23,"line_end":23,"column_start":12,"column_end":22},"name":"PrivateJar","qualname":"::secure::private::PrivateJar","value":"PrivateJar {  }","parent":null,"children":[{"krate":0,"index":63},{"krate":0,"index":65}],"decl_id":null,"docs":" A child cookie jar that provides authenticated encryption for its cookies.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":292},"span":{"file_name":[47,104,111,109,101,47,101,114,105,99,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,111,111,107,105,101,45,48,46,49,49,46,48,47,115,114,99,47,115,101,99,117,114,101,47,112,114,105,118,97,116,101,46,114,115],"byte_start":84888,"byte_end":84891,"line_start":33,"line_end":33,"column_start":12,"column_end":15},"name":"new","qualname":"<PrivateJar<'a>>::new","value":"fn (parent: &'a mut CookieJar, key: &Key) -> PrivateJar<'a>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new child `PrivateJar` with parent `parent` and key `key`.\n This method is typically called indirectly via the `signed` method of\n `CookieJar`.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":296},"span":{"file_name":[47,104,111,109,101,47,101,114,105,99,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,111,111,107,105,101,45,48,46,49,49,46,48,47,115,114,99,47,115,101,99,117,114,101,47,112,114,105,118,97,116,101,46,114,115],"byte_start":86844,"byte_end":86847,"line_start":78,"line_end":78,"column_start":12,"column_end":15},"name":"get","qualname":"<PrivateJar<'a>>::get","value":"fn (&self, name: &str) -> Option<Cookie<'static>>","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the `Cookie` inside this jar with the name `name`\n and authenticates and decrypts the cookie's value, returning a `Cookie`\n with the decrypted value. If the cookie cannot be found, or the cookie\n fails to authenticate or decrypt, `None` is returned.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":298},"span":{"file_name":[47,104,111,109,101,47,101,114,105,99,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,111,111,107,105,101,45,48,46,49,49,46,48,47,115,114,99,47,115,101,99,117,114,101,47,112,114,105,118,97,116,101,46,114,115],"byte_start":87778,"byte_end":87781,"line_start":106,"line_end":106,"column_start":12,"column_end":15},"name":"add","qualname":"<PrivateJar<'a>>::add","value":"fn (&mut self, mut cookie: Cookie<'static>) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Adds `cookie` to the parent jar. The cookie's value is encrypted with\n authenticated encryption assuring confidentiality, integrity, and\n authenticity.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":300},"span":{"file_name":[47,104,111,109,101,47,101,114,105,99,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,111,111,107,105,101,45,48,46,49,49,46,48,47,115,114,99,47,115,101,99,117,114,101,47,112,114,105,118,97,116,101,46,114,115],"byte_start":88874,"byte_end":88886,"line_start":135,"line_end":135,"column_start":12,"column_end":24},"name":"add_original","qualname":"<PrivateJar<'a>>::add_original","value":"fn (&mut self, mut cookie: Cookie<'static>) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Adds an \"original\" `cookie` to parent jar. The cookie's value is\n encrypted with authenticated encryption assuring confidentiality,\n integrity, and authenticity. Adding an original cookie does not affect\n the [`CookieJar::delta()`](struct.CookieJar.html#method.delta)\n computation. This method is intended to be used to seed the cookie jar\n with cookies received from a client's HTTP message.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":304},"span":{"file_name":[47,104,111,109,101,47,101,114,105,99,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,111,111,107,105,101,45,48,46,49,49,46,48,47,115,114,99,47,115,101,99,117,114,101,47,112,114,105,118,97,116,101,46,114,115],"byte_start":91235,"byte_end":91241,"line_start":195,"line_end":195,"column_start":12,"column_end":18},"name":"remove","qualname":"<PrivateJar<'a>>::remove","value":"fn (&mut self, cookie: Cookie<'static>) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Removes `cookie` from the parent jar.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":340},"span":{"file_name":[47,104,111,109,101,47,101,114,105,99,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,111,111,107,105,101,45,48,46,49,49,46,48,47,115,114,99,47,115,101,99,117,114,101,47,115,105,103,110,101,100,46,114,115],"byte_start":92627,"byte_end":92636,"line_start":22,"line_end":22,"column_start":12,"column_end":21},"name":"SignedJar","qualname":"::secure::signed::SignedJar","value":"SignedJar {  }","parent":null,"children":[{"krate":0,"index":83},{"krate":0,"index":85}],"decl_id":null,"docs":" A child cookie jar that authenticates its cookies.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":344},"span":{"file_name":[47,104,111,109,101,47,101,114,105,99,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,111,111,107,105,101,45,48,46,49,49,46,48,47,115,114,99,47,115,101,99,117,114,101,47,115,105,103,110,101,100,46,114,115],"byte_start":92927,"byte_end":92930,"line_start":32,"line_end":32,"column_start":12,"column_end":15},"name":"new","qualname":"<SignedJar<'a>>::new","value":"fn (parent: &'a mut CookieJar, key: &Key) -> SignedJar<'a>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new child `SignedJar` with parent `parent` and key `key`. This\n method is typically called indirectly via the `signed` method of\n `CookieJar`.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":348},"span":{"file_name":[47,104,111,109,101,47,101,114,105,99,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,111,111,107,105,101,45,48,46,49,49,46,48,47,115,114,99,47,115,101,99,117,114,101,47,115,105,103,110,101,100,46,114,115],"byte_start":94540,"byte_end":94543,"line_start":70,"line_end":70,"column_start":12,"column_end":15},"name":"get","qualname":"<SignedJar<'a>>::get","value":"fn (&self, name: &str) -> Option<Cookie<'static>>","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the `Cookie` inside this jar with the name `name`\n and verifies the authenticity and integrity of the cookie's value,\n returning a `Cookie` with the authenticated value. If the cookie cannot\n be found, or the cookie fails to verify, `None` is returned.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":350},"span":{"file_name":[47,104,111,109,101,47,101,114,105,99,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,111,111,107,105,101,45,48,46,49,49,46,48,47,115,114,99,47,115,101,99,117,114,101,47,115,105,103,110,101,100,46,114,115],"byte_start":95476,"byte_end":95479,"line_start":98,"line_end":98,"column_start":12,"column_end":15},"name":"add","qualname":"<SignedJar<'a>>::add","value":"fn (&mut self, mut cookie: Cookie<'static>) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Adds `cookie` to the parent jar. The cookie's value is signed assuring\n integrity and authenticity.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":352},"span":{"file_name":[47,104,111,109,101,47,101,114,105,99,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,111,111,107,105,101,45,48,46,49,49,46,48,47,115,114,99,47,115,101,99,117,114,101,47,115,105,103,110,101,100,46,114,115],"byte_start":96458,"byte_end":96470,"line_start":124,"line_end":124,"column_start":12,"column_end":24},"name":"add_original","qualname":"<SignedJar<'a>>::add_original","value":"fn (&mut self, mut cookie: Cookie<'static>) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Adds an \"original\" `cookie` to this jar. The cookie's value is signed\n assuring integrity and authenticity. Adding an original cookie does not\n affect the [`CookieJar::delta()`](struct.CookieJar.html#method.delta)\n computation. This method is intended to be used to seed the cookie jar\n with cookies received from a client's HTTP message.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":356},"span":{"file_name":[47,104,111,109,101,47,101,114,105,99,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,111,111,107,105,101,45,48,46,49,49,46,48,47,115,114,99,47,115,101,99,117,114,101,47,115,105,103,110,101,100,46,114,115],"byte_start":97702,"byte_end":97708,"line_start":160,"line_end":160,"column_start":12,"column_end":18},"name":"remove","qualname":"<SignedJar<'a>>::remove","value":"fn (&mut self, cookie: Cookie<'static>) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Removes `cookie` from the parent jar.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":614},"span":{"file_name":[47,104,111,109,101,47,101,114,105,99,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,111,111,107,105,101,45,48,46,49,49,46,48,47,115,114,99,47,115,101,99,117,114,101,47,107,101,121,46,114,115],"byte_start":99191,"byte_end":99194,"line_start":23,"line_end":23,"column_start":12,"column_end":15},"name":"Key","qualname":"::secure::key::Key","value":"Key {  }","parent":null,"children":[{"krate":0,"index":191},{"krate":0,"index":195}],"decl_id":null,"docs":" A cryptographic master key for use with `Signed` and/or `Private` jars.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":386},"span":{"file_name":[47,104,111,109,101,47,101,114,105,99,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,111,111,107,105,101,45,48,46,49,49,46,48,47,115,114,99,47,115,101,99,117,114,101,47,107,101,121,46,114,115],"byte_start":99979,"byte_end":99990,"line_start":51,"line_end":51,"column_start":12,"column_end":23},"name":"from_master","qualname":"<Key>::from_master","value":"fn (key: &[u8]) -> Key","parent":null,"children":[],"decl_id":null,"docs":" Derives new signing/encryption keys from a master key.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":388},"span":{"file_name":[47,104,111,109,101,47,101,114,105,99,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,111,111,107,105,101,45,48,46,49,49,46,48,47,115,114,99,47,115,101,99,117,114,101,47,107,101,121,46,114,115],"byte_start":101229,"byte_end":101237,"line_start":88,"line_end":88,"column_start":12,"column_end":20},"name":"generate","qualname":"<Key>::generate","value":"fn () -> Key","parent":null,"children":[],"decl_id":null,"docs":" Generates signing/encryption keys from a secure, random source. Keys are\n generated nondeterministically.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":390},"span":{"file_name":[47,104,111,109,101,47,101,114,105,99,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,111,111,107,105,101,45,48,46,49,49,46,48,47,115,114,99,47,115,101,99,117,114,101,47,107,101,121,46,114,115],"byte_start":101709,"byte_end":101721,"line_start":103,"line_end":103,"column_start":12,"column_end":24},"name":"try_generate","qualname":"<Key>::try_generate","value":"fn () -> Option<Key>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to generate signing/encryption keys from a secure, random\n source. Keys are generated nondeterministically. If randomness cannot be\n retrieved from the underlying operating system, returns `None`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":392},"span":{"file_name":[47,104,111,109,101,47,101,114,105,99,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,111,111,107,105,101,45,48,46,49,49,46,48,47,115,114,99,47,115,101,99,117,114,101,47,107,101,121,46,114,115],"byte_start":102320,"byte_end":102327,"line_start":125,"line_end":125,"column_start":12,"column_end":19},"name":"signing","qualname":"<Key>::signing","value":"fn (&self) -> &[u8]","parent":null,"children":[],"decl_id":null,"docs":" Returns the raw bytes of a key suitable for signing cookies.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":394},"span":{"file_name":[47,104,111,109,101,47,101,114,105,99,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,111,111,107,105,101,45,48,46,49,49,46,48,47,115,114,99,47,115,101,99,117,114,101,47,107,101,121,46,114,115],"byte_start":102643,"byte_end":102653,"line_start":139,"line_end":139,"column_start":12,"column_end":22},"name":"encryption","qualname":"<Key>::encryption","value":"fn (&self) -> &[u8]","parent":null,"children":[],"decl_id":null,"docs":" Returns the raw bytes of a key suitable for encrypting cookies.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":630},"span":{"file_name":[47,104,111,109,101,47,101,114,105,99,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,111,111,107,105,101,45,48,46,49,49,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":4896,"byte_end":4902,"line_start":161,"line_end":161,"column_start":12,"column_end":18},"name":"Cookie","qualname":"::Cookie","value":"Cookie {  }","parent":null,"children":[{"krate":0,"index":211},{"krate":0,"index":213},{"krate":0,"index":215},{"krate":0,"index":217},{"krate":0,"index":219},{"krate":0,"index":221},{"krate":0,"index":223},{"krate":0,"index":225},{"krate":0,"index":227},{"krate":0,"index":229}],"decl_id":null,"docs":" Representation of an HTTP cookie.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":448},"span":{"file_name":[47,104,111,109,101,47,101,114,105,99,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,111,111,107,105,101,45,48,46,49,49,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":5989,"byte_end":5992,"line_start":196,"line_end":196,"column_start":12,"column_end":15},"name":"new","qualname":"<Cookie<'static>>::new","value":"fn <N, V> (name: N, value: V) -> Cookie<'static>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `Cookie` with the given name and value.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":450},"span":{"file_name":[47,104,111,109,101,47,101,114,105,99,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,111,111,107,105,101,45,48,46,49,49,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":6798,"byte_end":6803,"line_start":225,"line_end":225,"column_start":12,"column_end":17},"name":"named","qualname":"<Cookie<'static>>::named","value":"fn <N> (name: N) -> Cookie<'static>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `Cookie` with the given name and an empty value.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":452},"span":{"file_name":[47,104,111,109,101,47,101,114,105,99,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,111,111,107,105,101,45,48,46,49,49,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":7223,"byte_end":7228,"line_start":242,"line_end":242,"column_start":12,"column_end":17},"name":"build","qualname":"<Cookie<'static>>::build","value":"fn <N, V> (name: N, value: V) -> CookieBuilder","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `CookieBuilder` instance from the given key and value\n strings.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":456},"span":{"file_name":[47,104,111,109,101,47,101,114,105,99,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,111,111,107,105,101,45,48,46,49,49,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":7829,"byte_end":7834,"line_start":263,"line_end":263,"column_start":12,"column_end":17},"name":"parse","qualname":"<Cookie<'c>>::parse","value":"fn <S> (s: S) -> Result<Cookie<'c>, ParseError>","parent":null,"children":[],"decl_id":null,"docs":" Parses a `Cookie` from the given HTTP cookie header value string. Does\n not perform any percent-decoding.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":458},"span":{"file_name":[47,104,111,109,101,47,101,114,105,99,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,111,111,107,105,101,45,48,46,49,49,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":8561,"byte_end":8574,"line_start":286,"line_end":286,"column_start":12,"column_end":25},"name":"parse_encoded","qualname":"<Cookie<'c>>::parse_encoded","value":"fn <S> (s: S) -> Result<Cookie<'c>, ParseError>","parent":null,"children":[],"decl_id":null,"docs":" Parses a `Cookie` from the given HTTP cookie header value string where\n the name and value fields are percent-encoded. Percent-decodes the\n name/value fields.","sig":null,"attributes":[{"value":"cfg(feature = \"percent-encode\")","span":{"file_name":[47,104,111,109,101,47,101,114,105,99,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,111,111,107,105,101,45,48,46,49,49,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":8515,"byte_end":8549,"line_start":285,"line_end":285,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":460},"span":{"file_name":[47,104,111,109,101,47,101,114,105,99,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,111,111,107,105,101,45,48,46,49,49,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":9270,"byte_end":9277,"line_start":308,"line_end":308,"column_start":12,"column_end":19},"name":"encoded","qualname":"<Cookie<'c>>::encoded","value":"fn <'a> (&'a self) -> EncodedCookie<'a, 'c>","parent":null,"children":[],"decl_id":null,"docs":" Wraps `self` in an `EncodedCookie`: a cost-free wrapper around `Cookie`\n whose `Display` implementation percent-encodes the name and value of the\n wrapped `Cookie`.","sig":null,"attributes":[{"value":"cfg(feature = \"percent-encode\")","span":{"file_name":[47,104,111,109,101,47,101,114,105,99,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,111,111,107,105,101,45,48,46,49,49,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":9224,"byte_end":9258,"line_start":307,"line_end":307,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":462},"span":{"file_name":[47,104,111,109,101,47,101,114,105,99,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,111,111,107,105,101,45,48,46,49,49,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":9719,"byte_end":9729,"line_start":324,"line_end":324,"column_start":12,"column_end":22},"name":"into_owned","qualname":"<Cookie<'c>>::into_owned","value":"fn (self) -> Cookie<'static>","parent":null,"children":[],"decl_id":null,"docs":" Converts `self` into a `Cookie` with a static lifetime. This method\n results in at most one allocation.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":464},"span":{"file_name":[47,104,111,109,101,47,101,114,105,99,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,111,111,107,105,101,45,48,46,49,49,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":10411,"byte_end":10415,"line_start":350,"line_end":350,"column_start":12,"column_end":16},"name":"name","qualname":"<Cookie<'c>>::name","value":"fn (&self) -> &str","parent":null,"children":[],"decl_id":null,"docs":" Returns the name of `self`.","sig":null,"attributes":[{"value":"inline","span":{"file_name":[47,104,111,109,101,47,101,114,105,99,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,111,111,107,105,101,45,48,46,49,49,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":10390,"byte_end":10399,"line_start":349,"line_end":349,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":466},"span":{"file_name":[47,104,111,109,101,47,101,114,105,99,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,111,111,107,105,101,45,48,46,49,49,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":10736,"byte_end":10741,"line_start":365,"line_end":365,"column_start":12,"column_end":17},"name":"value","qualname":"<Cookie<'c>>::value","value":"fn (&self) -> &str","parent":null,"children":[],"decl_id":null,"docs":" Returns the value of `self`.","sig":null,"attributes":[{"value":"inline","span":{"file_name":[47,104,111,109,101,47,101,114,105,99,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,111,111,107,105,101,45,48,46,49,49,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":10715,"byte_end":10724,"line_start":364,"line_end":364,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":468},"span":{"file_name":[47,104,111,109,101,47,101,114,105,99,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,111,111,107,105,101,45,48,46,49,49,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":11117,"byte_end":11127,"line_start":380,"line_end":380,"column_start":12,"column_end":22},"name":"name_value","qualname":"<Cookie<'c>>::name_value","value":"fn (&self) -> (&str, &str)","parent":null,"children":[],"decl_id":null,"docs":" Returns the name and value of `self` as a tuple of `(name, value)`.","sig":null,"attributes":[{"value":"inline","span":{"file_name":[47,104,111,109,101,47,101,114,105,99,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,111,111,107,105,101,45,48,46,49,49,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":11096,"byte_end":11105,"line_start":379,"line_end":379,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":470},"span":{"file_name":[47,104,111,109,101,47,101,114,105,99,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,111,111,107,105,101,45,48,46,49,49,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":12149,"byte_end":12158,"line_start":412,"line_end":412,"column_start":12,"column_end":21},"name":"http_only","qualname":"<Cookie<'c>>::http_only","value":"fn (&self) -> Option<bool>","parent":null,"children":[],"decl_id":null,"docs":" Returns whether this cookie was marked `HttpOnly` or not. Returns\n `Some(true)` when the cookie was explicitly set (manually or parsed) as\n `HttpOnly`, `Some(false)` when `http_only` was manually set to `false`,\n and `None` otherwise.","sig":null,"attributes":[{"value":"inline","span":{"file_name":[47,104,111,109,101,47,101,114,105,99,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,111,111,107,105,101,45,48,46,49,49,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":12128,"byte_end":12137,"line_start":411,"line_end":411,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":472},"span":{"file_name":[47,104,111,109,101,47,101,114,105,99,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,111,111,107,105,101,45,48,46,49,49,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":13145,"byte_end":13151,"line_start":444,"line_end":444,"column_start":12,"column_end":18},"name":"secure","qualname":"<Cookie<'c>>::secure","value":"fn (&self) -> Option<bool>","parent":null,"children":[],"decl_id":null,"docs":" Returns whether this cookie was marked `Secure` or not. Returns\n `Some(true)` when the cookie was explicitly set (manually or parsed) as\n `Secure`, `Some(false)` when `secure` was manually set to `false`, and\n `None` otherwise.","sig":null,"attributes":[{"value":"inline","span":{"file_name":[47,104,111,109,101,47,101,114,105,99,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,111,111,107,105,101,45,48,46,49,49,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":13124,"byte_end":13133,"line_start":443,"line_end":443,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":474},"span":{"file_name":[47,104,111,109,101,47,101,114,105,99,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,111,111,107,105,101,45,48,46,49,49,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":13537,"byte_end":13546,"line_start":459,"line_end":459,"column_start":12,"column_end":21},"name":"same_site","qualname":"<Cookie<'c>>::same_site","value":"fn (&self) -> Option<SameSite>","parent":null,"children":[],"decl_id":null,"docs":" Returns the `SameSite` attribute of this cookie if one was specified.","sig":null,"attributes":[{"value":"inline","span":{"file_name":[47,104,111,109,101,47,101,114,105,99,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,111,111,107,105,101,45,48,46,49,49,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":13516,"byte_end":13525,"line_start":458,"line_end":458,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":476},"span":{"file_name":[47,104,111,109,101,47,101,114,105,99,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,111,111,107,105,101,45,48,46,49,49,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":14037,"byte_end":14044,"line_start":477,"line_end":477,"column_start":12,"column_end":19},"name":"max_age","qualname":"<Cookie<'c>>::max_age","value":"fn (&self) -> Option<Duration>","parent":null,"children":[],"decl_id":null,"docs":" Returns the specified max-age of the cookie if one was specified.","sig":null,"attributes":[{"value":"inline","span":{"file_name":[47,104,111,109,101,47,101,114,105,99,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,111,111,107,105,101,45,48,46,49,49,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":14016,"byte_end":14025,"line_start":476,"line_end":476,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":478},"span":{"file_name":[47,104,111,109,101,47,101,114,105,99,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,111,111,107,105,101,45,48,46,49,49,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":14602,"byte_end":14606,"line_start":498,"line_end":498,"column_start":12,"column_end":16},"name":"path","qualname":"<Cookie<'c>>::path","value":"fn (&self) -> Option<&str>","parent":null,"children":[],"decl_id":null,"docs":" Returns the `Path` of the cookie if one was specified.","sig":null,"attributes":[{"value":"inline","span":{"file_name":[47,104,111,109,101,47,101,114,105,99,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,111,111,107,105,101,45,48,46,49,49,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":14581,"byte_end":14590,"line_start":497,"line_end":497,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":480},"span":{"file_name":[47,104,111,109,101,47,101,114,105,99,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,111,111,107,105,101,45,48,46,49,49,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":15180,"byte_end":15186,"line_start":519,"line_end":519,"column_start":12,"column_end":18},"name":"domain","qualname":"<Cookie<'c>>::domain","value":"fn (&self) -> Option<&str>","parent":null,"children":[],"decl_id":null,"docs":" Returns the `Domain` of the cookie if one was specified.","sig":null,"attributes":[{"value":"inline","span":{"file_name":[47,104,111,109,101,47,101,114,105,99,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,111,111,107,105,101,45,48,46,49,49,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":15159,"byte_end":15168,"line_start":518,"line_end":518,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":482},"span":{"file_name":[47,104,111,109,101,47,101,114,105,99,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,111,111,107,105,101,45,48,46,49,49,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":15893,"byte_end":15900,"line_start":542,"line_end":542,"column_start":12,"column_end":19},"name":"expires","qualname":"<Cookie<'c>>::expires","value":"fn (&self) -> Option<Tm>","parent":null,"children":[],"decl_id":null,"docs":" Returns the `Expires` time of the cookie if one was specified.","sig":null,"attributes":[{"value":"inline","span":{"file_name":[47,104,111,109,101,47,101,114,105,99,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,111,111,107,105,101,45,48,46,49,49,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":15872,"byte_end":15881,"line_start":541,"line_end":541,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":484},"span":{"file_name":[47,104,111,109,101,47,101,114,105,99,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,111,111,107,105,101,45,48,46,49,49,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":16260,"byte_end":16268,"line_start":559,"line_end":559,"column_start":12,"column_end":20},"name":"set_name","qualname":"<Cookie<'c>>::set_name","value":"fn <N> (&mut self, name: N) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Sets the name of `self` to `name`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":486},"span":{"file_name":[47,104,111,109,101,47,101,114,105,99,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,111,111,107,105,101,45,48,46,49,49,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":16693,"byte_end":16702,"line_start":576,"line_end":576,"column_start":12,"column_end":21},"name":"set_value","qualname":"<Cookie<'c>>::set_value","value":"fn <V> (&mut self, value: V) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Sets the value of `self` to `value`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":488},"span":{"file_name":[47,104,111,109,101,47,101,114,105,99,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,111,111,107,105,101,45,48,46,49,49,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":17172,"byte_end":17185,"line_start":594,"line_end":594,"column_start":12,"column_end":25},"name":"set_http_only","qualname":"<Cookie<'c>>::set_http_only","value":"fn (&mut self, value: bool) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Sets the value of `http_only` in `self` to `value`.","sig":null,"attributes":[{"value":"inline","span":{"file_name":[47,104,111,109,101,47,101,114,105,99,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,111,111,107,105,101,45,48,46,49,49,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":17151,"byte_end":17160,"line_start":593,"line_end":593,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":490},"span":{"file_name":[47,104,111,109,101,47,101,114,105,99,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,111,111,107,105,101,45,48,46,49,49,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":17601,"byte_end":17611,"line_start":612,"line_end":612,"column_start":12,"column_end":22},"name":"set_secure","qualname":"<Cookie<'c>>::set_secure","value":"fn (&mut self, value: bool) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Sets the value of `secure` in `self` to `value`.","sig":null,"attributes":[{"value":"inline","span":{"file_name":[47,104,111,109,101,47,101,114,105,99,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,111,111,107,105,101,45,48,46,49,49,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":17580,"byte_end":17589,"line_start":611,"line_end":611,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":492},"span":{"file_name":[47,104,111,109,101,47,101,114,105,99,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,111,111,107,105,101,45,48,46,49,49,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":18073,"byte_end":18086,"line_start":630,"line_end":630,"column_start":12,"column_end":25},"name":"set_same_site","qualname":"<Cookie<'c>>::set_same_site","value":"fn (&mut self, value: SameSite) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Sets the value of `same_site` in `self` to `value`.","sig":null,"attributes":[{"value":"inline","span":{"file_name":[47,104,111,109,101,47,101,114,105,99,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,111,111,107,105,101,45,48,46,49,49,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":18052,"byte_end":18061,"line_start":629,"line_end":629,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":494},"span":{"file_name":[47,104,111,109,101,47,101,114,105,99,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,111,111,107,105,101,45,48,46,49,49,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":18668,"byte_end":18679,"line_start":654,"line_end":654,"column_start":12,"column_end":23},"name":"set_max_age","qualname":"<Cookie<'c>>::set_max_age","value":"fn (&mut self, value: Duration) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Sets the value of `max_age` in `self` to `value`.","sig":null,"attributes":[{"value":"inline","span":{"file_name":[47,104,111,109,101,47,101,114,105,99,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,111,111,107,105,101,45,48,46,49,49,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":18647,"byte_end":18656,"line_start":653,"line_end":653,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":496},"span":{"file_name":[47,104,111,109,101,47,101,114,105,99,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,111,111,107,105,101,45,48,46,49,49,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":19063,"byte_end":19071,"line_start":671,"line_end":671,"column_start":12,"column_end":20},"name":"set_path","qualname":"<Cookie<'c>>::set_path","value":"fn <P> (&mut self, path: P) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Sets the `path` of `self` to `path`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":498},"span":{"file_name":[47,104,111,109,101,47,101,114,105,99,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,111,111,107,105,101,45,48,46,49,49,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":19533,"byte_end":19543,"line_start":688,"line_end":688,"column_start":12,"column_end":22},"name":"set_domain","qualname":"<Cookie<'c>>::set_domain","value":"fn <D> (&mut self, domain: D) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Sets the `domain` of `self` to `domain`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":500},"span":{"file_name":[47,104,111,109,101,47,101,114,105,99,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,111,111,107,105,101,45,48,46,49,49,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":20171,"byte_end":20182,"line_start":714,"line_end":714,"column_start":12,"column_end":23},"name":"set_expires","qualname":"<Cookie<'c>>::set_expires","value":"fn (&mut self, time: Tm) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Sets the expires field of `self` to `time`.","sig":null,"attributes":[{"value":"inline","span":{"file_name":[47,104,111,109,101,47,101,114,105,99,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,111,111,107,105,101,45,48,46,49,49,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":20150,"byte_end":20159,"line_start":713,"line_end":713,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":502},"span":{"file_name":[47,104,111,109,101,47,101,114,105,99,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,111,111,107,105,101,45,48,46,49,49,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":20869,"byte_end":20883,"line_start":740,"line_end":740,"column_start":12,"column_end":26},"name":"make_permanent","qualname":"<Cookie<'c>>::make_permanent","value":"fn (&mut self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Makes `self` a \"permanent\" cookie by extending its expiration and max\n age 20 years into the future.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":506},"span":{"file_name":[47,104,111,109,101,47,101,114,105,99,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,111,111,107,105,101,45,48,46,49,49,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":22882,"byte_end":22890,"line_start":805,"line_end":805,"column_start":12,"column_end":20},"name":"name_raw","qualname":"<Cookie<'c>>::name_raw","value":"fn (&self) -> Option<&'c str>","parent":null,"children":[],"decl_id":null,"docs":" Returns the name of `self` as a string slice of the raw string `self`\n was originally parsed from. If `self` was not originally parsed from a\n raw string, returns `None`.","sig":null,"attributes":[{"value":"inline","span":{"file_name":[47,104,111,109,101,47,101,114,105,99,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,111,111,107,105,101,45,48,46,49,49,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":22861,"byte_end":22870,"line_start":804,"line_end":804,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":508},"span":{"file_name":[47,104,111,109,101,47,101,114,105,99,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,111,111,107,105,101,45,48,46,49,49,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":23970,"byte_end":23979,"line_start":835,"line_end":835,"column_start":12,"column_end":21},"name":"value_raw","qualname":"<Cookie<'c>>::value_raw","value":"fn (&self) -> Option<&'c str>","parent":null,"children":[],"decl_id":null,"docs":" Returns the value of `self` as a string slice of the raw string `self`\n was originally parsed from. If `self` was not originally parsed from a\n raw string, returns `None`.","sig":null,"attributes":[{"value":"inline","span":{"file_name":[47,104,111,109,101,47,101,114,105,99,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,111,111,107,105,101,45,48,46,49,49,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":23949,"byte_end":23958,"line_start":834,"line_end":834,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":510},"span":{"file_name":[47,104,111,109,101,47,101,114,105,99,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,111,111,107,105,101,45,48,46,49,49,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":25150,"byte_end":25158,"line_start":866,"line_end":866,"column_start":12,"column_end":20},"name":"path_raw","qualname":"<Cookie<'c>>::path_raw","value":"fn (&self) -> Option<&'c str>","parent":null,"children":[],"decl_id":null,"docs":" Returns the `Path` of `self` as a string slice of the raw string `self`\n was originally parsed from. If `self` was not originally parsed from a\n raw string, or if `self` doesn't contain a `Path`, or if the `Path` has\n changed since parsing, returns `None`.","sig":null,"attributes":[{"value":"inline","span":{"file_name":[47,104,111,109,101,47,101,114,105,99,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,111,111,107,105,101,45,48,46,49,49,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":25129,"byte_end":25138,"line_start":865,"line_end":865,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":512},"span":{"file_name":[47,104,111,109,101,47,101,114,105,99,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,111,111,107,105,101,45,48,46,49,49,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":26461,"byte_end":26471,"line_start":900,"line_end":900,"column_start":12,"column_end":22},"name":"domain_raw","qualname":"<Cookie<'c>>::domain_raw","value":"fn (&self) -> Option<&'c str>","parent":null,"children":[],"decl_id":null,"docs":" Returns the `Domain` of `self` as a string slice of the raw string\n `self` was originally parsed from. If `self` was not originally parsed\n from a raw string, or if `self` doesn't contain a `Domain`, or if the\n `Domain` has changed since parsing, returns `None`.","sig":null,"attributes":[{"value":"inline","span":{"file_name":[47,104,111,109,101,47,101,114,105,99,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,111,111,107,105,101,45,48,46,49,49,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":26440,"byte_end":26449,"line_start":899,"line_end":899,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":514},"span":{"file_name":[47,104,111,109,101,47,101,114,105,99,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,111,111,107,105,101,45,48,46,49,49,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":27331,"byte_end":27344,"line_start":927,"line_end":927,"column_start":12,"column_end":25},"name":"EncodedCookie","qualname":"::EncodedCookie","value":"","parent":null,"children":[],"decl_id":null,"docs":" Wrapper around `Cookie` whose `Display` implementation percent-encodes the\n cookie's name and value.","sig":null,"attributes":[{"value":"cfg(feature = \"percent-encode\")","span":{"file_name":[47,104,111,109,101,47,101,114,105,99,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,111,111,107,105,101,45,48,46,49,49,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":27285,"byte_end":27319,"line_start":926,"line_end":926,"column_start":1,"column_end":35}}]}],"impls":[{"id":0,"kind":"Inherent","span":{"file_name":[47,104,111,109,101,47,101,114,105,99,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,111,111,107,105,101,45,48,46,49,49,46,48,47,115,114,99,47,98,117,105,108,100,101,114,46,114,115],"byte_start":34207,"byte_end":34220,"line_start":40,"line_end":40,"column_start":6,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":28},{"krate":0,"index":30},{"krate":0,"index":32},{"krate":0,"index":34},{"krate":0,"index":36},{"krate":0,"index":38},{"krate":0,"index":40},{"krate":0,"index":42},{"krate":0,"index":44},{"krate":0,"index":46}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Inherent","span":{"file_name":[47,104,111,109,101,47,101,114,105,99,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,111,111,107,105,101,45,48,46,49,49,46,48,47,115,114,99,47,112,97,114,115,101,46,114,115],"byte_start":40322,"byte_end":40332,"line_start":32,"line_end":32,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":82}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,101,114,105,99,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,111,111,107,105,101,45,48,46,49,49,46,48,47,115,114,99,47,112,97,114,115,101,46,114,115],"byte_start":40869,"byte_end":40879,"line_start":46,"line_end":46,"column_start":23,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":86}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,101,114,105,99,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,111,111,107,105,101,45,48,46,49,49,46,48,47,115,114,99,47,112,97,114,115,101,46,114,115],"byte_start":41014,"byte_end":41024,"line_start":52,"line_end":52,"column_start":26,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":90}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,101,114,105,99,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,111,111,107,105,101,45,48,46,49,49,46,48,47,115,114,99,47,112,97,114,115,101,46,114,115],"byte_start":41134,"byte_end":41144,"line_start":58,"line_end":58,"column_start":16,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":94}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Inherent","span":{"file_name":[47,104,111,109,101,47,101,114,105,99,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,111,111,107,105,101,45,48,46,49,49,46,48,47,115,114,99,47,106,97,114,46,114,115],"byte_start":58468,"byte_end":58477,"line_start":88,"line_end":88,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":130},{"krate":0,"index":132},{"krate":0,"index":134},{"krate":0,"index":136},{"krate":0,"index":138},{"krate":0,"index":140},{"krate":0,"index":142},{"krate":0,"index":144},{"krate":0,"index":146},{"krate":0,"index":148},{"krate":0,"index":150}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,101,114,105,99,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,111,111,107,105,101,45,48,46,49,49,46,48,47,115,114,99,47,106,97,114,46,114,115],"byte_start":71004,"byte_end":71009,"line_start":434,"line_end":434,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":158},{"krate":0,"index":160}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,101,114,105,99,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,111,111,107,105,101,45,48,46,49,49,46,48,47,115,114,99,47,106,97,114,46,114,115],"byte_start":71398,"byte_end":71402,"line_start":450,"line_end":450,"column_start":23,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":170},{"krate":0,"index":172}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Inherent","span":{"file_name":[47,104,111,109,101,47,101,114,105,99,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,111,111,107,105,101,45,48,46,49,49,46,48,47,115,114,99,47,100,101,108,116,97,46,114,115],"byte_start":78049,"byte_end":78060,"line_start":18,"line_end":18,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":194},{"krate":0,"index":196}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,101,114,105,99,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,111,111,107,105,101,45,48,46,49,49,46,48,47,115,114,99,47,100,101,108,116,97,46,114,115],"byte_start":78602,"byte_end":78613,"line_start":39,"line_end":39,"column_start":16,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":200},{"krate":0,"index":202}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,101,114,105,99,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,111,111,107,105,101,45,48,46,49,49,46,48,47,115,114,99,47,100,101,108,116,97,46,114,115],"byte_start":78742,"byte_end":78753,"line_start":47,"line_end":47,"column_start":19,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":206}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,101,114,105,99,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,111,111,107,105,101,45,48,46,49,49,46,48,47,115,114,99,47,100,101,108,116,97,46,114,115],"byte_start":78863,"byte_end":78874,"line_start":53,"line_end":53,"column_start":20,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":210}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,101,114,105,99,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,111,111,107,105,101,45,48,46,49,49,46,48,47,115,114,99,47,100,101,108,116,97,46,114,115],"byte_start":78982,"byte_end":78993,"line_start":59,"line_end":59,"column_start":13,"column_end":24},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,101,114,105,99,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,111,111,107,105,101,45,48,46,49,49,46,48,47,115,114,99,47,100,101,108,116,97,46,114,115],"byte_start":79012,"byte_end":79023,"line_start":61,"line_end":61,"column_start":15,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":216}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,101,114,105,99,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,111,111,107,105,101,45,48,46,49,49,46,48,47,115,114,99,47,100,101,108,116,97,46,114,115],"byte_start":79136,"byte_end":79147,"line_start":67,"line_end":67,"column_start":22,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":220}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Inherent","span":{"file_name":[47,104,111,109,101,47,101,114,105,99,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,111,111,107,105,101,45,48,46,49,49,46,48,47,115,114,99,47,100,114,97,102,116,46,114,115],"byte_start":80263,"byte_end":80271,"line_start":28,"line_end":28,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":228},{"krate":0,"index":230},{"krate":0,"index":232}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,101,114,105,99,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,111,111,107,105,101,45,48,46,49,49,46,48,47,115,114,99,47,100,114,97,102,116,46,114,115],"byte_start":81783,"byte_end":81791,"line_start":90,"line_end":90,"column_start":23,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":236}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Inherent","span":{"file_name":[47,104,111,109,101,47,101,114,105,99,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,111,111,107,105,101,45,48,46,49,49,46,48,47,115,114,99,47,115,101,99,117,114,101,47,112,114,105,118,97,116,101,46,114,115],"byte_start":84665,"byte_end":84675,"line_start":28,"line_end":28,"column_start":10,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":292},{"krate":0,"index":294},{"krate":0,"index":296},{"krate":0,"index":298},{"krate":0,"index":300},{"krate":0,"index":302},{"krate":0,"index":304}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Inherent","span":{"file_name":[47,104,111,109,101,47,101,114,105,99,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,111,111,107,105,101,45,48,46,49,49,46,48,47,115,114,99,47,115,101,99,117,114,101,47,115,105,103,110,101,100,46,114,115],"byte_start":92706,"byte_end":92715,"line_start":27,"line_end":27,"column_start":10,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":344},{"krate":0,"index":346},{"krate":0,"index":348},{"krate":0,"index":350},{"krate":0,"index":352},{"krate":0,"index":354},{"krate":0,"index":356}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Inherent","span":{"file_name":[47,104,111,109,101,47,101,114,105,99,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,111,111,107,105,101,45,48,46,49,49,46,48,47,115,114,99,47,115,101,99,117,114,101,47,107,101,121,46,114,115],"byte_start":99286,"byte_end":99289,"line_start":28,"line_end":28,"column_start":6,"column_end":9},"value":"","parent":null,"children":[{"krate":0,"index":386},{"krate":0,"index":388},{"krate":0,"index":390},{"krate":0,"index":392},{"krate":0,"index":394}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Inherent","span":{"file_name":[47,104,111,109,101,47,101,114,105,99,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,111,111,107,105,101,45,48,46,49,49,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":3084,"byte_end":3093,"line_start":101,"line_end":101,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":442},{"krate":0,"index":444}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Inherent","span":{"file_name":[47,104,111,109,101,47,101,114,105,99,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,111,111,107,105,101,45,48,46,49,49,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":5689,"byte_end":5695,"line_start":185,"line_end":185,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":448},{"krate":0,"index":450},{"krate":0,"index":452}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Inherent","span":{"file_name":[47,104,111,109,101,47,101,114,105,99,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,111,111,107,105,101,45,48,46,49,49,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":7418,"byte_end":7424,"line_start":250,"line_end":250,"column_start":10,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":456},{"krate":0,"index":458},{"krate":0,"index":460},{"krate":0,"index":462},{"krate":0,"index":464},{"krate":0,"index":466},{"krate":0,"index":468},{"krate":0,"index":470},{"krate":0,"index":472},{"krate":0,"index":474},{"krate":0,"index":476},{"krate":0,"index":478},{"krate":0,"index":480},{"krate":0,"index":482},{"krate":0,"index":484},{"krate":0,"index":486},{"krate":0,"index":488},{"krate":0,"index":490},{"krate":0,"index":492},{"krate":0,"index":494},{"krate":0,"index":496},{"krate":0,"index":498},{"krate":0,"index":500},{"krate":0,"index":502},{"krate":0,"index":504},{"krate":0,"index":506},{"krate":0,"index":508},{"krate":0,"index":510},{"krate":0,"index":512}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,101,114,105,99,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,111,111,107,105,101,45,48,46,49,49,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":27444,"byte_end":27457,"line_start":930,"line_end":930,"column_start":35,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":518}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,101,114,105,99,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,111,111,107,105,101,45,48,46,49,49,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":27920,"byte_end":27926,"line_start":942,"line_end":942,"column_start":27,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":522}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,101,114,105,99,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,111,111,107,105,101,45,48,46,49,49,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":28436,"byte_end":28442,"line_start":962,"line_end":962,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":526},{"krate":0,"index":528}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,101,114,105,99,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,111,111,107,105,101,45,48,46,49,49,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":28645,"byte_end":28651,"line_start":970,"line_end":970,"column_start":40,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":532}],"docs":"","sig":null,"attributes":[]}],"refs":[],"macro_refs":[],"relations":[{"span":{"file_name":[47,104,111,109,101,47,101,114,105,99,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,111,111,107,105,101,45,48,46,49,49,46,48,47,115,114,99,47,98,117,105,108,100,101,114,46,114,115],"byte_start":34207,"byte_end":34220,"line_start":40,"line_end":40,"column_start":6,"column_end":19},"kind":{"variant":"Impl","fields":[0]},"from":{"krate":0,"index":534},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,104,111,109,101,47,101,114,105,99,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,111,111,107,105,101,45,48,46,49,49,46,48,47,115,114,99,47,112,97,114,115,101,46,114,115],"byte_start":40322,"byte_end":40332,"line_start":32,"line_end":32,"column_start":6,"column_end":16},"kind":{"variant":"Impl","fields":[1]},"from":{"krate":0,"index":544},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,104,111,109,101,47,101,114,105,99,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,111,111,107,105,101,45,48,46,49,49,46,48,47,115,114,99,47,112,97,114,115,101,46,114,115],"byte_start":40869,"byte_end":40879,"line_start":46,"line_end":46,"column_start":23,"column_end":33},"kind":{"variant":"Impl","fields":[2]},"from":{"krate":0,"index":544},"to":{"krate":2,"index":7838}},{"span":{"file_name":[47,104,111,109,101,47,101,114,105,99,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,111,111,107,105,101,45,48,46,49,49,46,48,47,115,114,99,47,112,97,114,115,101,46,114,115],"byte_start":41014,"byte_end":41024,"line_start":52,"line_end":52,"column_start":26,"column_end":36},"kind":{"variant":"Impl","fields":[3]},"from":{"krate":0,"index":544},"to":{"krate":2,"index":2562}},{"span":{"file_name":[47,104,111,109,101,47,101,114,105,99,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,111,111,107,105,101,45,48,46,49,49,46,48,47,115,114,99,47,112,97,114,115,101,46,114,115],"byte_start":41134,"byte_end":41144,"line_start":58,"line_end":58,"column_start":16,"column_end":26},"kind":{"variant":"Impl","fields":[4]},"from":{"krate":0,"index":544},"to":{"krate":1,"index":2338}},{"span":{"file_name":[47,104,111,109,101,47,101,114,105,99,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,111,111,107,105,101,45,48,46,49,49,46,48,47,115,114,99,47,106,97,114,46,114,115],"byte_start":58468,"byte_end":58477,"line_start":88,"line_end":88,"column_start":6,"column_end":15},"kind":{"variant":"Impl","fields":[5]},"from":{"krate":0,"index":566},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,104,111,109,101,47,101,114,105,99,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,111,111,107,105,101,45,48,46,49,49,46,48,47,115,114,99,47,106,97,114,46,114,115],"byte_start":71004,"byte_end":71009,"line_start":434,"line_end":434,"column_start":23,"column_end":28},"kind":{"variant":"Impl","fields":[6]},"from":{"krate":0,"index":154},"to":{"krate":2,"index":3846}},{"span":{"file_name":[47,104,111,109,101,47,101,114,105,99,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,111,111,107,105,101,45,48,46,49,49,46,48,47,115,114,99,47,106,97,114,46,114,115],"byte_start":71398,"byte_end":71402,"line_start":450,"line_end":450,"column_start":23,"column_end":27},"kind":{"variant":"Impl","fields":[7]},"from":{"krate":0,"index":166},"to":{"krate":2,"index":3846}},{"span":{"file_name":[47,104,111,109,101,47,101,114,105,99,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,111,111,107,105,101,45,48,46,49,49,46,48,47,115,114,99,47,100,101,108,116,97,46,114,115],"byte_start":78049,"byte_end":78060,"line_start":18,"line_end":18,"column_start":6,"column_end":17},"kind":{"variant":"Impl","fields":[8]},"from":{"krate":0,"index":580},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,104,111,109,101,47,101,114,105,99,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,111,111,107,105,101,45,48,46,49,49,46,48,47,115,114,99,47,100,101,108,116,97,46,114,115],"byte_start":78602,"byte_end":78613,"line_start":39,"line_end":39,"column_start":16,"column_end":27},"kind":{"variant":"Impl","fields":[9]},"from":{"krate":0,"index":580},"to":{"krate":2,"index":1882}},{"span":{"file_name":[47,104,111,109,101,47,101,114,105,99,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,111,111,107,105,101,45,48,46,49,49,46,48,47,115,114,99,47,100,101,108,116,97,46,114,115],"byte_start":78742,"byte_end":78753,"line_start":47,"line_end":47,"column_start":19,"column_end":30},"kind":{"variant":"Impl","fields":[10]},"from":{"krate":0,"index":580},"to":{"krate":2,"index":1900}},{"span":{"file_name":[47,104,111,109,101,47,101,114,105,99,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,111,111,107,105,101,45,48,46,49,49,46,48,47,115,114,99,47,100,101,108,116,97,46,114,115],"byte_start":78863,"byte_end":78874,"line_start":53,"line_end":53,"column_start":20,"column_end":31},"kind":{"variant":"Impl","fields":[11]},"from":{"krate":0,"index":580},"to":{"krate":2,"index":2318}},{"span":{"file_name":[47,104,111,109,101,47,101,114,105,99,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,111,111,107,105,101,45,48,46,49,49,46,48,47,115,114,99,47,100,101,108,116,97,46,114,115],"byte_start":78982,"byte_end":78993,"line_start":59,"line_end":59,"column_start":13,"column_end":24},"kind":{"variant":"Impl","fields":[12]},"from":{"krate":0,"index":580},"to":{"krate":2,"index":2324}},{"span":{"file_name":[47,104,111,109,101,47,101,114,105,99,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,111,111,107,105,101,45,48,46,49,49,46,48,47,115,114,99,47,100,101,108,116,97,46,114,115],"byte_start":79012,"byte_end":79023,"line_start":61,"line_end":61,"column_start":15,"column_end":26},"kind":{"variant":"Impl","fields":[13]},"from":{"krate":0,"index":580},"to":{"krate":2,"index":7400}},{"span":{"file_name":[47,104,111,109,101,47,101,114,105,99,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,111,111,107,105,101,45,48,46,49,49,46,48,47,115,114,99,47,100,101,108,116,97,46,114,115],"byte_start":79136,"byte_end":79147,"line_start":67,"line_end":67,"column_start":22,"column_end":33},"kind":{"variant":"Impl","fields":[14]},"from":{"krate":0,"index":580},"to":{"krate":2,"index":2624}},{"span":{"file_name":[47,104,111,109,101,47,101,114,105,99,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,111,111,107,105,101,45,48,46,49,49,46,48,47,115,114,99,47,100,114,97,102,116,46,114,115],"byte_start":80263,"byte_end":80271,"line_start":28,"line_end":28,"column_start":6,"column_end":14},"kind":{"variant":"Impl","fields":[15]},"from":{"krate":0,"index":590},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,104,111,109,101,47,101,114,105,99,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,111,111,107,105,101,45,48,46,49,49,46,48,47,115,114,99,47,100,114,97,102,116,46,114,115],"byte_start":81783,"byte_end":81791,"line_start":90,"line_end":90,"column_start":23,"column_end":31},"kind":{"variant":"Impl","fields":[16]},"from":{"krate":0,"index":590},"to":{"krate":2,"index":7838}},{"span":{"file_name":[47,104,111,109,101,47,101,114,105,99,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,111,111,107,105,101,45,48,46,49,49,46,48,47,115,114,99,47,115,101,99,117,114,101,47,112,114,105,118,97,116,101,46,114,115],"byte_start":84665,"byte_end":84675,"line_start":28,"line_end":28,"column_start":10,"column_end":20},"kind":{"variant":"Impl","fields":[17]},"from":{"krate":0,"index":288},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,104,111,109,101,47,101,114,105,99,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,111,111,107,105,101,45,48,46,49,49,46,48,47,115,114,99,47,115,101,99,117,114,101,47,115,105,103,110,101,100,46,114,115],"byte_start":92706,"byte_end":92715,"line_start":27,"line_end":27,"column_start":10,"column_end":19},"kind":{"variant":"Impl","fields":[18]},"from":{"krate":0,"index":340},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,104,111,109,101,47,101,114,105,99,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,111,111,107,105,101,45,48,46,49,49,46,48,47,115,114,99,47,115,101,99,117,114,101,47,107,101,121,46,114,115],"byte_start":99286,"byte_end":99289,"line_start":28,"line_end":28,"column_start":6,"column_end":9},"kind":{"variant":"Impl","fields":[19]},"from":{"krate":0,"index":614},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,104,111,109,101,47,101,114,105,99,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,111,111,107,105,101,45,48,46,49,49,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":3084,"byte_end":3093,"line_start":101,"line_end":101,"column_start":6,"column_end":15},"kind":{"variant":"Impl","fields":[20]},"from":{"krate":0,"index":620},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,104,111,109,101,47,101,114,105,99,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,111,111,107,105,101,45,48,46,49,49,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":5689,"byte_end":5695,"line_start":185,"line_end":185,"column_start":6,"column_end":12},"kind":{"variant":"Impl","fields":[21]},"from":{"krate":0,"index":630},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,104,111,109,101,47,101,114,105,99,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,111,111,107,105,101,45,48,46,49,49,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":7418,"byte_end":7424,"line_start":250,"line_end":250,"column_start":10,"column_end":16},"kind":{"variant":"Impl","fields":[22]},"from":{"krate":0,"index":630},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,104,111,109,101,47,101,114,105,99,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,111,111,107,105,101,45,48,46,49,49,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":27444,"byte_end":27457,"line_start":930,"line_end":930,"column_start":35,"column_end":48},"kind":{"variant":"Impl","fields":[23]},"from":{"krate":0,"index":514},"to":{"krate":2,"index":7838}},{"span":{"file_name":[47,104,111,109,101,47,101,114,105,99,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,111,111,107,105,101,45,48,46,49,49,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":27920,"byte_end":27926,"line_start":942,"line_end":942,"column_start":27,"column_end":33},"kind":{"variant":"Impl","fields":[24]},"from":{"krate":0,"index":630},"to":{"krate":2,"index":7838}},{"span":{"file_name":[47,104,111,109,101,47,101,114,105,99,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,111,111,107,105,101,45,48,46,49,49,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":28436,"byte_end":28442,"line_start":962,"line_end":962,"column_start":18,"column_end":24},"kind":{"variant":"Impl","fields":[25]},"from":{"krate":0,"index":630},"to":{"krate":2,"index":6650}},{"span":{"file_name":[47,104,111,109,101,47,101,114,105,99,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,111,111,107,105,101,45,48,46,49,49,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":28645,"byte_end":28651,"line_start":970,"line_end":970,"column_start":40,"column_end":46},"kind":{"variant":"Impl","fields":[26]},"from":{"krate":0,"index":630},"to":{"krate":2,"index":2318}}]}